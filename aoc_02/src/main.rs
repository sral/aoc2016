use std::iter::FromIterator;

fn is_legal_move(x: usize, y: usize, keypad: &Vec<Vec<char>>) -> bool {
    if keypad[y][x] == 'i' {
        false
    } else {
        true
    }
}

fn find_code(instructions: &str, keypad: &Vec<Vec<char>>, start_pos: (usize, usize)) -> String {
    let mut code: Vec<char> = vec![];
    let mut x = start_pos.0;
    let mut y = start_pos.1;
    for char in instructions.chars() {
        match char {
            'L' => {
                if is_legal_move(x - 1, y, &keypad) {
                    x -= 1;
                }
            },
            'R' => {
                if is_legal_move(x + 1, y, &keypad) {
                    x += 1;
                }
            },
            'D' => {
                if is_legal_move(x, y + 1, &keypad) {
                    y += 1;
                }
            },
            'U' => {
                if is_legal_move(x, y - 1, &keypad) {
                    y -= 1;
                }
            },
            ',' => {
                code.push(keypad[y][x])
            }
            _ => panic!("Bork bork...")
        }
    }
    String::from_iter(code)
}

fn main() {
    let instructions = "RLRLLLULULULUUDUULULRDDLURURDDLDUUDDLRDDUUUDDRUDLRRDDUDUUDULUDRDULRUDRULR\
    DRUDLDDULRRDLDRLUDDLLDRDDDUDDLUDUDULDRLLDRLULRLURDLULRUUUDRULLUUDLRDLDDUDRRRLDLRUUURRLDDRRRUR\
    LLULDUULLDRLRDLLDURDLDDULLDDLDLUURRRURLRURLLRRDURLDUDDLULUUULULLLDRRRRRLULRDUDURURLULRURRRLLU\
    URDURULRRUULDRDLULDLLUDLUDRLUDLRRLDLLDLDUDDLULLDRULRLRULDURRDLDLLUDRLLDRRDLDUDUURUURDUUDDDLDL\
    DDRDLUDLDUUUUDLDRLRURDLURURDLLLUURURDRDLUDLLRUDULLLDLULLULLDLDDRDRRRUDDDUDDDDRULLLLRLDDLLRDRL\
    LLRRLDRRUDRUUURLLLRULRRDURDLDRLDDUUDUUURRLRRUDLDLDDRUDLULLUUDUUUDLUDDRUULLLURUDDDDLRUDDLLLRUR\
    ,\
    LDLRLDDDLUDRDRRUDUURLRULLUDDRLURLUULDLLRLLUDLRLRUDLULRLRRLRURLDDDURUDUUURDRLDDLUUUDRUDUDDDLLU\
    RLLULRUULLUDRULUDDULDUDUDULLDRUUUULRDUUDLUDURDLLRLLRLUUDUUDRLLLRULUURUDLDRLLDUDLDDRULDULDURRL\
    DDDUDUDDRUDUDRDURLLLLLULDRDDLLUDULLLUDRURLDLDLDULLDDRURRLUDDRLURLULRLDDDUUUURLRDLRURDDURLDLRR\
    LLRLRLUURRLLDDLDRLRDUDDLLDDDURUUDURLRRDUULRRDDRRUULDRLRUDRRLDDRLDRULLDLDURRULDURRRDLRRLRLLLRL\
    DRLLULRRLLLLLDLDDULDLLDLLDUUDDRLURUUUUULRDDLRDLRDRDRDLUDDLDDRULLUDDRLDLLUDRLUURRLUDURURLLRURR\
    URRLRLLRLURURDDDDRRLURDUULLUU,\
    LLRRDURRDLDULRDUDLRDRDRURULDURUDRRURDDDRLDLDRDRDRDRULDUURLULDDUURUULUDULLDUDLLLLDLLLDRLUUULLU\
    LDDRRUDDULLLULRDRULDDULDUDRDDLUUURULDLLUDUUUUURUDLLDRDULLRULLDURDRLLDLDRDDURUULUDURRRUULLDUUD\
    DURDURLDLRRLLDURDDLRRRUDLRRRDLDRLUDLUDRDRLDDLLLRLLRURDLRDUUUURRLULDDLDLLLUDRDRLRRDURDDLURDLDD\
    DULLLRRLDDDRULDDDLRRDULUUUDRRULDDLLLURDRRLLLUULDRRRUURRDDLULDRLULDDDLDULDRRRULRULLURLURULLLLR\
    UDRRRDRDRDLDULURLRRRRLRUDDRRRUURUURLLRURURUURRURRDLDLLUDRRRDUDDRDURLLRLRRULD,\
    DULRRDRLRLUDLLURURLLRLRDLLDLLDRDUURLRUUUDLLDUUDDUULDUULLRUDRURLUDRDLRUDDDLULUDLLDRULULLLDRRUL\
    DLLUURLRRRLDRDLDRURRRRDLRUUDULLRLLLDLRUDLDUUDRLDLRDRLRDLDDDUDLRUDLDDLLLDRLLRRUUDRDDUUURURRRUU\
    DLRRDDRUDLDDULULDLRRLRDDUDRUURRUULURLURUDRRURRRULDDDDURDLUUULUULULRDLRRRRRURURRLRUULDUUURRDRR\
    DLDUUUULLULLLLUDLUUDUURRDLDLRRRLUUURULDULDLDRLLURDRUULLLLLULLLDRURURRUDRRRRUDUDUDRUDUDRDRULUU\
    DRURDDUUDLDLDUURUDURLRLRRDRDRDLLDUDDULLRDLDDRLLDLRDURDDULLLDLLLULDLUUUDLDRDLURUURDDLRDLLLLLRL\
    URDLLLULLRRLU,\
    DUULULUUDUDLLRLRURULLDLRRLURDLLDUDUDDRURRLUDULULDRRDRLUULUDDLUURURDLDDDRDRUDURLDDLUDUURULRRUU\
    DRLURRLRLDURRRULRLDDDRUDDDDDUDDULLLRRLLDULDRULUDLRRDLLUDRDLDULRLLLUULLRULRLLLLUDDRRDRLULDLDLU\
    RDDRUDDLDLDLDRULDLLDDUUDULUULULLURDURRLLUDRULLRDUDRDRURDRDRDURUUDULDDRURUDLLUUDUUDURDLRDRURUD\
    RUURLUUURLRLUDRUDRUURLLUDRLURDDURRUDRDRLRRLDDDRDDLUUUDDLULDUURUDUDLLDRURDURRDULRLURRDLDDRLUDR\
    LDLRLDDUURRULDDLDUDDLRDULLDDDLDUUUUDLRUDUDLDRDLRDDLDLRLLUDDRRLUDLDUUULLDDRLRRDLRRRRUDDLRLLULR\
    LRDURDUDDRRULLDDLDLRRDLLULDURURDDURLRLULULURRUDUDRDLURULDUDLUULDUUURLLRUDLLRDLRUDRLULDUDRRDUU\
    DUUULUUUDDRUD,";

    let keypad_one = vec![
    vec!['i', 'i', 'i', 'i', 'i'],
    vec!['i', '1', '2', '3', 'i'],
    vec!['i', '4', '5', '6', 'i'],
    vec!['i', '7', '8', '9', 'i'],
    vec!['i', 'i', 'i', 'i', 'i'],
    ];

    let keypad_two = vec![
    vec!['i', 'i', 'i', 'i', 'i', 'i', 'i'],
    vec!['i', 'i', 'i', '1', 'i', 'i', 'i'],
    vec!['i', 'i', '2', '3', '4', 'i', 'i'],
    vec!['i', '5', '6', '7', '8', '9', 'i'],
    vec!['i', 'i', 'A', 'B', 'C', 'i', 'i'],
    vec!['i', 'i', 'i', 'D', 'i', 'i', 'i'],
    vec!['i', 'i', 'i', 'i', 'i', 'i', 'i'],
    ];

    println!("First code: {}", find_code(&instructions, &keypad_one, (2, 2)));
    println!("Second code: {}", find_code(&instructions, &keypad_two, (1, 3)));
}
